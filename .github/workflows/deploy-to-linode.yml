name: Deploy to Linode

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create production env file
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > .env.prod
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env.prod
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env.prod
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env.prod
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env.prod

      - name: Copy application files to Linode
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.LINODE_IP }}
          username: ${{ secrets.LINODE_SSH_USER }}
          key: ${{ secrets.LINODE_SSH_KEY }}
          source: ".,!venv,!.git,!__pycache__,!*.pyc"
          target: "/home/${{ secrets.LINODE_SSH_USER }}/zelo_website"
          rm: true
          strip_components: 0

      - name: Deploy and check status
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.LINODE_IP }}
          username: ${{ secrets.LINODE_SSH_USER }}
          key: ${{ secrets.LINODE_SSH_KEY }}
          script: |
            cd /home/${{ secrets.LINODE_SSH_USER }}/zelo_website
            mv .env.prod .env
            echo '${{ secrets.SUDO_PASSWORD }}' | sudo -S docker-compose down --remove-orphans || true
            echo '${{ secrets.SUDO_PASSWORD }}' | sudo -S docker-compose up --build -d
            
            # Check container status
            echo "Checking container status..."
            echo '${{ secrets.SUDO_PASSWORD }}' | sudo -S docker ps
            
            # Check container logs
            echo "Checking container logs..."
            echo '${{ secrets.SUDO_PASSWORD }}' | sudo -S docker-compose logs --tail=50
            
            # Check firewall status
            echo "Checking firewall status..."
            echo '${{ secrets.SUDO_PASSWORD }}' | sudo -S ufw status
            
            # Check if port 80 is listening
            echo "Checking port 80..."
            echo '${{ secrets.SUDO_PASSWORD }}' | sudo -S netstat -tulpn | grep :80
            
            # Test local connection
            echo "Testing local connection..."
            curl -v http://localhost:80