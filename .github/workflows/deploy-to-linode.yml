name: Deploy to Linode

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create production env file
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > .env.prod
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env.prod
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env.prod
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env.prod
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env.prod

      - name: Copy application files to Linode
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.LINODE_IP }}
          username: ${{ secrets.LINODE_SSH_USER }}
          key: ${{ secrets.LINODE_SSH_KEY }}
          source: ".,!venv,!.git,!__pycache__,!*.pyc"
          target: "/home/${{ secrets.LINODE_SSH_USER }}/zelo_website"
          rm: true
          strip_components: 0

      - name: Setup Docker and permissions
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.LINODE_IP }}
          username: ${{ secrets.LINODE_SSH_USER }}
          key: ${{ secrets.LINODE_SSH_KEY }}
          script: |
            # Ensure Docker is running
            sudo systemctl start docker || true
            # Add current user to docker group if not already added
            sudo usermod -aG docker $USER || true
            # Make sure we can execute docker commands
            sudo chmod 666 /var/run/docker.sock
            # Create docker network if it doesn't exist
            sudo docker network create flask_prod_network || true

      - name: Deploy application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.LINODE_IP }}
          username: ${{ secrets.LINODE_SSH_USER }}
          key: ${{ secrets.LINODE_SSH_KEY }}
          script: |
            # Move to project directory
            cd /home/${{ secrets.LINODE_SSH_USER }}/zelo_website
            # Setup environment
            mv .env.prod .env
            chmod +x deploy.sh
            # Run deployment with sudo to ensure permissions
            sudo -E ./deploy.sh