name: Deploy to Linode

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create production env file
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > .env.prod
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env.prod
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env.prod
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env.prod
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env.prod

      - name: Copy application files to Linode
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.LINODE_IP }}
          username: ${{ secrets.LINODE_SSH_USER }}
          key: ${{ secrets.LINODE_SSH_KEY }}
          source: ".,!venv,!.git,!__pycache__,!*.pyc"
          target: "/home/${{ secrets.LINODE_SSH_USER }}/zelo_website"
          rm: true
          strip_components: 0

      - name: Fix Docker permissions and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.LINODE_IP }}
          username: ${{ secrets.LINODE_SSH_USER }}
          key: ${{ secrets.LINODE_SSH_KEY }}
          script: |
            # Move to project directory
            cd /home/${{ secrets.LINODE_SSH_USER }}/zelo_website
            
            # Setup environment
            mv .env.prod .env
            chmod +x deploy.sh
            
            # Fix Docker socket permissions
            if [ ! -S /var/run/docker.sock ]; then
              echo "Docker socket does not exist. Starting Docker daemon..."
              sudo systemctl start docker
            fi
            
            # Add current user to docker group and fix socket permissions
            sudo usermod -aG docker $USER
            sudo chown root:docker /var/run/docker.sock
            sudo chmod 666 /var/run/docker.sock
            
            # Ensure we can access Docker
            sudo systemctl restart docker
            
            # Wait for Docker to be ready
            sleep 5
            
            # Run deployment
            docker ps >/dev/null 2>&1 || { echo "Docker is not accessible. Please check permissions."; exit 1; }
            docker-compose down --remove-orphans || true
            docker-compose up --build -d